//=============================================================================
//
// バレット処理 [bullet.cpp]
// Author : Ryo Sugimoto
//
//=============================================================================
#include "main.h"
#include "bullet.h"
#include "renderer.h"
#include "manager.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************

//==================================================================================================//
//    * プレイヤーのセット関数 *
//==================================================================================================//
void CBullet::Set(D3DXVECTOR3 pos, D3DXVECTOR3 rot)	//ゲージセット処理
{
	m_nLife = 60;
	CScene3D::Set(pos, rot, D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), D3DXVECTOR3(5.0f, 5.0f, 0.0f), CScene::TEX_MAX, 0, 1, 1, true, CScene::DRAW_TYPE_NORMAL);
}
//=============================================================================
// プレイヤーの更新処理
//=============================================================================
void CBullet::Update(void)
{
	m_nLife--;
	if (m_nLife < 0) { Uninit(); return; }
	GetPosition() += D3DXVECTOR3(sinf(GetRotation().y), 0.0f, cosf(GetRotation().y)) * -3.0f;
}

