//=============================================================================
//
// 爆発の処理 [explosion.cpp]
// Author : 竹内亘
//
//=============================================================================
#include "explosion.h"
#include "renderer.h"
#include "manager.h"
#include "input.h"

//=============================================================================
// 静的メンバ変数
//=============================================================================
LPDIRECT3DTEXTURE9 CExplosion::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CExplosion::CExplosion():CScene2D(2)
{

}
//=============================================================================
// デストラクタ
//=============================================================================
CExplosion::~CExplosion()
{

}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CExplosion::Init(D3DXVECTOR3 pos)
{
	CScene2D::Init(pos);

	// オブジェクトの種類の設定
	SetObjType(CScene::OBJTYPE_EXPLOSION);

	SetPosition(pos,20,20); 
	SetExplosion(0);
	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CExplosion::Uninit(void)
{
	CScene2D::Uninit();
}
//=============================================================================
// 更新処理
//=============================================================================
void CExplosion::Update(void)
{
 	m_nCounterAnim++;

	if ((m_nCounterAnim % 5) == 0)
	{// パターンNo.更新
		m_nPatternAnim = (m_nPatternAnim + 1) % 8;

		SetExplosion(m_nPatternAnim);

		if (m_nPatternAnim <= 0)
		{
			Uninit();
		}
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void CExplosion::Draw(void)
{
	CScene2D::Draw();
}
//=============================================================================
// 弾の生成
//=============================================================================
CExplosion * CExplosion::Create(D3DXVECTOR3 pos)
{
	CExplosion *pExplosion = NULL;

	if (pExplosion == NULL)
	{
		pExplosion = new CExplosion;

		if (pExplosion != NULL)
		{
			pExplosion->Init(pos);
			pExplosion->BindTexture(m_pTexture);
		}
	}
	return pExplosion;
}
//=============================================================================
// テクスチャの読み込み
//=============================================================================
HRESULT CExplosion::Load(void)
{
	CManager manager;	// インスタンス

	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = manager.GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, EXPLOSION_TEXTURE_000, &m_pTexture);

	return S_OK;
}
//=============================================================================
// テクスチャの破棄
//=============================================================================
void CExplosion::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}