////=============================================================================
////
//// ライフ処理 [life.h]
//// Author : 竹内亘
////
////=============================================================================
//#include "life.h"
//#include "polygon.h"
//#include "renderer.h"
//#include "manager.h"
//
////=============================================================================
//// 静的メンバ変数
////=============================================================================
//CPolygon * CLife::m_apLife[MAX_LIFE] = {};
////int CLife::m_nLife = 0;
//
////=============================================================================
//// コンストラクタ
////=============================================================================
//CLife::CLife()
//{
//	m_nLife = 0;
//}
////=============================================================================
//// デストラクタ
////=============================================================================
//CLife::~CLife()
//{
//}
////=============================================================================
//// 初期化処理
////=============================================================================
//HRESULT CLife::Init(D3DXVECTOR3 pos)
//{
//	for (int nCount = 0; nCount < MAX_LIFE; nCount++)
//	{
//		m_apLife[nCount] = new CPolygon;
//
//		m_apLife[nCount]->Init(D3DXVECTOR3(pos.x + (LIFE_INTERVAL_SIZE * nCount), pos.y, pos.z));
//	}
//
//	m_nLife = 3;
//
//	return S_OK;
//}
////=============================================================================
//// 終了処理
////=============================================================================
//void CLife::Uninit(void)
//{
//	for (int nCount = 0; nCount < MAX_LIFE; nCount++)
//	{
//		m_apLife[nCount]->Uninit();
//	}
//
//	Release();
//}
////=============================================================================
//// 更新処理
////=============================================================================
//void CLife::Update(void)
//{
//	for (int nCount = 0; nCount < MAX_LIFE; nCount++)
//	{
//		m_apLife[nCount]->Update();
//	}
//}
////=============================================================================
//// 描画処理
////=============================================================================
//void CLife::Draw(void)
//{
//	for (int nCount = 0; nCount < MAX_LIFE; nCount++)
//	{
//		m_apLife[nCount]->Draw();
//	}
//}
////=============================================================================
//// ライフの設置
////=============================================================================
//void CLife::SetLife(int life)
//{
//	m_nLife += life;
//}
////=============================================================================
//// ライフの取得
////=============================================================================
//int CLife::GetLife(void)
//{
//	return m_nLife;
//}
////=============================================================================
//// ライフの減少
////=============================================================================
//void CLife::CutLife(int cut)
//{
//	m_nLife -= cut;
//}
////=============================================================================
//// スコアの生成
////=============================================================================
//CLife * CLife::Create(D3DXVECTOR3 pos)
//{
//	CLife *pLife = NULL;
//
//	if (pLife == NULL)
//	{
//		pLife = new CLife;
//
//		if (pLife != NULL)
//		{
//			pLife->Init(pos);
//		}
//	}
//	return pLife;
//}
