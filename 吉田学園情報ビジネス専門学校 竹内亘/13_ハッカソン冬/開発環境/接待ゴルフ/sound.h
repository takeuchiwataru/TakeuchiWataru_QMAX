//=============================================================================
//
// サウンド処理 [sound.h]
// Author : Meguro Mikiya
//
//=============================================================================
#ifndef _SOUND_H_
#define _SOUND_H_

#include "main.h"

//*********************************************************************
//サウンドクラスの定義
//*********************************************************************
//基本クラス
class CSound
{
public:
	// サウンドファイル
	typedef enum //ラベルと数と並びを揃える
	{
		SOUND_LABEL_BGM_TITLE = 0,	// BGMタイトル
		SOUND_LABEL_BGM_TUTORIAL,	// BGMチュートリアル
		SOUND_LABEL_BGM_GAME,		// BGMゲーム
		SOUND_LABEL_BGM_RESULT,		// BGMリザルト
		SOUND_LABEL_BGM_GAMEOVER,	// BGMゲームオーバー
		SOUND_LABEL_BGM_RANKING,	// BGMランキング
		SOUND_LABEL_SE_SHOT,		// ショット
		SOUND_LABEL_SE_HAKUSYU,		// 拍手
		SOUND_LABEL_SE_CUPIN,		// カップイン
		SOUND_LABEL_SE_NOTCUPIN,	// カップインしなかったとき

		SOUND_LABEL_MAX,
	} SOUND_LABEL;
	// パラメータ構造体定義
	typedef struct
	{
		char *pFilename;	// ファイル名
		int nCntLoop;		// ループカウント(-1でループ再生)
	} SOUNDPARAM;

	CSound();
	~CSound();
	HRESULT InitSound(HWND hWnd);
	void UninitSound(void);
	HRESULT PlaySound(SOUND_LABEL label);
	void StopSound(SOUND_LABEL label);
	void StopSound(void);
	HRESULT CheckChunk(HANDLE hFile, DWORD format, DWORD *pChunkSize, DWORD *pChunkDataPosition);
	HRESULT ReadChunkData(HANDLE hFile, void *pBuffer, DWORD dwBuffersize, DWORD dwBufferoffset);

protected:
	IXAudio2				*m_pXAudio2 = NULL;								// XAudio2オブジェクトへのポインタ
	IXAudio2MasteringVoice	*m_pMasteringVoice = NULL;						// マスターボイスへのポインタ
	IXAudio2SourceVoice		*m_apSourceVoice[SOUND_LABEL_MAX] = {};			// ソースボイスへのポインタ
	BYTE					*m_apDataAudio[SOUND_LABEL_MAX] = {};			// オーディオデータへのポインタ
	DWORD					m_aSizeAudio[SOUND_LABEL_MAX] = {};				// オーディオデータサイズ
    // 各音素材のパラメータ ラベルと数と並びを揃える
	SOUNDPARAM m_aSoundParam[SOUND_LABEL_MAX] =
	{
		{ "data/BGM/title.wav", -1 },		// タイトル
		{ "data/BGM/tutorial.wav", -1 },	// チュートリアル
		{ "data/BGM/game.wav", -1 },		// ゲーム
		{ "data/BGM/result.wav", -1 },		// リザルト
		{ "data/BGM/gameover.wav", -1 },	// ゲームオーバー
		{ "data/BGM/ranking.wav", -1 },		// ランキング
		{ "data/SE/shot.wav", 0 },			// ボールを打った時の音
		{ "data/SE/hakusyu.wav", 0 },		// 拍手喝采音
		{ "data/SE/cupin.wav", 0 },			// ホールインワンした時の音
		{ "data/SE/Notin.wav", 0 },			// ホールインワンした時の音
	};
};
#endif
