//=========================================================================================================================
//
// 円柱処理 [mesh.cylinderh]
// Author : Eisuke Sakagawa
//
//=========================================================================================================================
#ifndef _MESHCYLINDER_H_
#define _MESHCYLINDER_H_

//*************************************************************************************************************************
// インクルードファイル
//*************************************************************************************************************************
#include "main.h"

//*************************************************************************************************************************
// マクロ定義
//*************************************************************************************************************************

//*************************************************************************************************************************
// 構造体定義
//*************************************************************************************************************************
typedef struct
{
	D3DXVECTOR3	pos;			// 円柱の位置
	D3DXVECTOR3	rot;			// 円柱の向き
	D3DXVECTOR3	num;			// 円柱の数
	D3DXVECTOR3	fRadius;		// 円柱の半径
	D3DXVECTOR3	tex;			// 円柱のtex
	int			MaxVtx;			// 頂点の最大数
	int			MaxIdx;			// インデックスの最大数
	int			MaxPolygon;		// ポリゴンの最大数
	D3DXMATRIX	mtxWorld;		// ワールドマトリックス
	bool		bUse;			// 使用しているか
}MeshCylinder;

//*************************************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************************************
void InitMeshCylinder(void);	// 円柱の初期化処理
void UninitMeshCylinder(void);	// 円柱の終了処理
void UpdateMeshCylinder(void);	// 円柱の更新処理
void DrawMeshCylinder(void);	// 円柱の描画処理

void SetMeshCylinder(void);		// 円柱の設定処理
void DeleteMeshCylinder(void);	// 円柱の破棄処理

#endif
